#!groovy
pipeline {
agent any

// tools {
//    maven 'maven'
// }
stages {
  // stage('Build project') {
  //   steps {
  //     sh '''mvn install'''
  //   }
  // }
  stage('SonarQube analysis') {
    environment {
      SCANNER_HOME = tool 'Sonar-scanner'
    }
    steps {
    withSonarQubeEnv(credentialsId: 'sonar', installationName: 'sonar') {
         sh '''$SCANNER_HOME/bin/sonar-scanner \
         -Dsonar.projectKey=spring \
         -Dsonar.sources=src/'''
       }
     }
}
   stage('SQuality Gate') {
     steps {
       timeout(time: 1, unit: 'MINUTES') {
       waitForQualityGate abortPipeline: true
       }
  }
}
}
}